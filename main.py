# main.py
import sys
import subprocess
import time
import re
from pathlib import Path

REQS = ["srtranslator", "translatepy"]


def ensure_deps():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ ~/.local, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç."""
    missing = []
    for pkg in REQS:
        try:
            __import__(pkg)
        except ImportError:
            missing.append(pkg)

    if not missing:
        return

    print(f"üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: {' '.join(missing)}")
    # –ü—ã—Ç–∞–µ–º—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–∞—Ç–∞–ª–æ–≥
    try:
        cmd = [sys.executable, "-m", "pip", "install", "--user", *missing]
        subprocess.check_call(cmd)
        # –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑
        for pkg in missing:
            __import__(pkg)
    except Exception as e:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ pip.")
        print("   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω python-pip (Arch): sudo pacman -S python-pip")
        print(f"   –î–µ—Ç–∞–ª–∏: {e}")
        sys.exit(1)


def make_output_name(inp: Path) -> Path:
    """
    –£–¥–∞–ª—è–µ—Ç —Ö–≤–æ—Å—Ç—ã .en, .en_US, .en-GB –∏ —Ç.–ø. –ø–µ—Ä–µ–¥ .srt
    –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–º—è —Å —Å—É—Ñ—Ñ–∏–∫—Å–æ–º .ru_RU.srt
    """
    name = inp.name
    # —Å—Ä–µ–∂–µ–º ".en", ".en_US", ".en-GB" –ø–µ—Ä–µ–¥ ".srt"
    name = re.sub(r'\.en([-_][A-Z]{2})?\.srt$', '', name, flags=re.IGNORECASE)
    # —É–±–µ—Ä—ë–º ".srt" –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
    name = re.sub(r'\.srt$', '', name, flags=re.IGNORECASE)
    return inp.with_name(name + ".ru_RU.srt")


def is_russian_sub(name: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Ñ–∞–π–ª —É–∂–µ —Ä—É—Å—Å–∫–∏–π: *.ru.srt, *.ru_RU.srt, *.ru-RU.srt"""
    return re.search(r'\.ru([-_][A-Z]{2})?\.srt$', name, flags=re.IGNORECASE) is not None


def translate_all_here():
    ensure_deps()
    from srtranslator import SrtFile
    from srtranslator.translators.translatepy import TranslatePy

    cwd = Path(".")
    files = sorted([p for p in cwd.iterdir() if p.is_file() and p.suffix.lower() == ".srt"],
                   key=lambda p: p.name.lower())

    if not files:
        print("‚ÑπÔ∏è –í —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ –Ω–µ—Ç .srt —Ñ–∞–π–ª–æ–≤.")
        return

    tr = TranslatePy()  # –ª—ë–≥–∫–∏–π –æ–Ω–ª–∞–π–Ω-–±—ç–∫–µ–Ω–¥ (–±–µ–∑ –∫–ª—é—á–µ–π/–º–æ–¥–µ–ª–µ–π)

    any_done = False
    for p in files:
        if is_russian_sub(p.name):
            continue
        out = make_output_name(p)
        print(f"üîÑ –ü–µ—Ä–µ–≤–æ–¥: {p.name} ‚Üí {out.name}", flush=True)
        try:
            s = SrtFile(p.as_posix())
            s.translate(tr, "en", "ru")
            s.save(out.as_posix())
            print(f"‚úÖ –ì–æ—Ç–æ–≤–æ: {out.name}", flush=True)
            any_done = True
            time.sleep(0.3)  # —á—É—Ç—å –∑–∞–º–µ–¥–ª–∏–º, —á—Ç–æ–±—ã –Ω–µ –ª–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç—ã
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ {p.name}: {e}", flush=True)

    if not any_done:
        print("‚ÑπÔ∏è –ü–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ (–≤–æ–∑–º–æ–∂–Ω–æ, —Ç–æ–ª—å–∫–æ —Ä—É—Å—Å–∫–∏–µ).")


if __name__ == "__main__":
    translate_all_here()
